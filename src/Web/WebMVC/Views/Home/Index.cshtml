@using System.Data.SqlClient;
@model WebMVC.Models.PaginatedPlatesViewModel
@functions{
    public SortOrder chooseOrder(string? sortField, SortOrder order)
    {
        if (string.IsNullOrEmpty(sortField))
        {
            return SortOrder.Ascending;
        }
        return order == SortOrder.Ascending? SortOrder.Descending : SortOrder.Ascending;
    }
}
@{
    ViewData["Title"] = "Home Page";
}

<div class="text-center">
    <h1 class="display-4">Welcome</h1>

    <a href="/AddPlate">Add New Plate</a>
<h2>@Model.SortField - @Model.SortOrder</h2>
    <table>
        <thead></thead>
            <tr>
                <td>Registration</td>
                <td>Price <span><a href="?sortField=Price&sortOrder=@chooseOrder(Model.SortField, Model.SortOrder)">^</a></span></td>
                <td>Letters</td>
                <td>Numbers</td>
            </tr>
        <tbody>
@foreach(var plate in Model.Plates) {
            <tr>
                <td>@Html.DisplayFor(modelItem => plate.Registration)</td>
                <td>@Html.DisplayFor(modelItem => plate.SalePrice)</td>
                <td>@Html.DisplayFor(modelItem => plate.Letters)</td>
                <td>@Html.DisplayFor(modelItem => plate.Numbers)</td>
            </tr>
}
        </tbody>
    </table>
    <span><a href="?pageIndex=@Html.DisplayFor(modelItem => Model.PreviousPage)">Previous Page</a></span>
    <span>@Html.DisplayFor(modelItem => Model.CurrentPage)</span>
    <span><a href="?pageIndex=@Html.DisplayFor(modelItem => Model.NextPage)">Next Page</a></span>

</div>